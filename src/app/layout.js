'use client';
import { Inter } from "next/font/google";
import "./globals.css";
import Navbar from "./components/Navbar";
import Sidebar from "./components/Sidebar";
import React, { useState } from 'react';
import { usePathname } from 'next/navigation';
import AuthProvider from "./Providers/AuthProvider";

const roboto = Inter({ subsets: ["latin"], weight: "400" });

const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  const [isSidebarOpen, setIsSidebarOpen] = useState(false);
  const pathname = usePathname();

  const toggleSidebar = () => {
    setIsSidebarOpen(!isSidebarOpen);
  };

  const handleMouseEnter = () => {
    setIsSidebarOpen(true);
  };

  const handleMouseLeave = () => {
    setIsSidebarOpen(false);
  };

  const isPropertyListing = pathname === '/PropertyListing';
  const isSinglePropertyListing = pathname === '/SinglePropertyListing';
  const hideSidebar = isPropertyListing || isSinglePropertyListing;

  return (
    <html lang="en">
      <body className={roboto.className}>
        <AuthProvider>
          <Navbar toggleSidebar={toggleSidebar} />
          <div className="flex pt-16">
            {!hideSidebar && (
              <Sidebar isOpen={isSidebarOpen} setIsOpen={setIsSidebarOpen} />
            )}
            <div className={`flex-1 transition-all duration-300 ease-in-out ${!hideSidebar && (isSidebarOpen ? 'ml-52' : 'ml-16')
              }`}>
              <main className="">{children}</main>
            </div>
          </div>
        </AuthProvider>
      </body>
    </html>
  );
}
